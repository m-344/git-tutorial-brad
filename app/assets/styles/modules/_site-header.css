.site-header {
  padding: 10px 0;
  position: absolute;
  width: 100%;
  z-index: 2;
  /* when background color changes transition grdually to a new value
the '3s' parameter shows the time in which the transition happens
the 'ease-out' is a type of transition (default is linear)
	*/
  transition: background-color .3s ease-out;

  &--is-expanded {
    background-color: rgba($mainBlue, .55);
  }

  @mixin atMedium {
    position: fixed;
    background-color: rgba($mainBlue, .3);
  }

  &__btn-container {
    @mixin atMedium {
      float: right;
    }
  }

  &__logo {
    top: 0;
    position: absolute;
    /*takes the element out of the normal flow*/
    left: 50%;
    transform: translateX(-50%) scale(.8);
    /*Half of the elements width*/
    transform-origin: 50% 0;
    background-color: $mainBlue;
    padding: 25px 36px;

    @mixin atMedium {
      left: auto;
      transform: translateX(0);
    }
  }

  &__logo__graphic {
    text-indent: -9999px;
  }

  &__menu-icon {
    width: 20px;
    height: 19px;
    position: absolute;
    z-index: 10;
    top: 10 px;
    right: 10px;

    /* pseudo element. spares html code. the content property is needed to be the property rendered */
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 20px;
      height: 3px;
      background-color: #FFF;
      /* the property transfomr-origin
For instance:
there is a hamburger line. Its origin (pivot point) is set to the middle of that line (so the values
are set to 50% 50%). If we rotate the line (what we are doing by JS by adding the
&__menu-icon--close-x  class) the it will rotate along its center. but we need from
 its left upper corner insted
       */
      transform-origin: 0 0;
      /* transition the transform property within 3 seconds and use the 'ease-out' style */
      transition: transform .3s ease-out;
    }

    &__middle {
      position: absolute;
      top: 8px;
      left: 0;
      width: 20px;
      height: 3px;
      background-color: #FFF;
      /*
0 = the left edge (of the div), x
50% = the vertical center, y
       */
      transform-origin: 0 50%;
      /* 'all' refers to all properties */
      transition: all .3s ease-out;
    }

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 20px;
      height: 3px;
      background-color: #FFF;
      /* here we specify the bottom left corner
'0' points to the left corner
'100%' points to the very vertical bottom
      */
      transform-origin: 0 100%;
      transition: transition .3s ease-out;
    }

    @mixin atMedium {
      display: none;
    }
  }

  &__menu-icon--close-x {
    &::before {
      /* scaleX is needed to reach the 'hamburger line' the bottom right corner */
      transform: rotate(45deg) scaleX(1.25);
    }

    .site-header__menu-icon__middle {
      opacity: 0;
      transform: scaleX(0);
    }

    &::after {
      /* scaleX is needed to reach the 'hamburger line' the bottom right corner */
      transform: rotate(-45deg) scaleX(1.25) translateY(1px);
    }
  }

  &__menu-content {
    opacity: 0;
    transform: scale(1.2);
    transition: all .3s ease-out;
    /* z-index ensures that the div will be hidden and the user cannot accidently click
the menu icon which is hidden
note: with z-index we should use position: relative; otherwise the browser wil ignore it
 */
    position: relative;
    z-index: -10;
    padding-top: 90px;
    text-align: center;

    @mixin atMedium {
      opacity: 1;
      z-index: 1;
      padding-top: 0;
      transform: scale(1);
    }

    &--is-visible {
      opacity: 1;
      z-index: 1;
      transform: scale(1);
    }
  }
}